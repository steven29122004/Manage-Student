<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title%>
    </title>
    <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
</head>

<body>
    <button
        class="bg-transparent cursor-pointer mx-12 my-6 hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded"
        onclick="window.location.href='/viewAll'">View
        All Student</button>
    <form class="mx-60 bg-neutral-100 drop-shadow-xl  p-10 h-auto my-20 rounded-lg space-y-5">
        <h1 class="text-center block mb-2 text-lg font-medium text-gray-900 dark:text-black"> Student Form</h1>
        <div class="studentID">
            <label for="SID" class="block mb-2 text-sm font-medium text-gray-900 dark:text-black">Student ID</label>
            <div>
                <input id="SID" pattern="[sS]3[0-9]{3}"
                    class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-100 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-100 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-600 dark:focus:ring-blue-500 dark:focus:border-blue-500"
                    placeholder="Start with S, s3975 for example (4 digits) " required></input>
                <div id="alertSID"
                    class="hidden bg-red-100 mt-3 border border-red-400 text-red-700 px-4 py-3 rounded relative"
                    role="alert">
                    <strong class="font-bold">Alert: </strong>
                    <span class="block sm:inline">SID must start with "S3 and [0-9]x2</span>
                    <span class="absolute top-0 bottom-0 right-0 px-4 py-3">
                        <svg class="fill-current h-6 w-6 text-red-500" role="button" xmlns="http://www.w3.org/2000/svg"
                            viewBox="0 0 20 20">
                            <title>Close</title>
                            <path
                                d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z" />
                        </svg>
                    </span>
                </div>
            </div>
        </div>

        <div class="major mb-5">
            <label for="majors" class="block mb-2 text-sm font-medium text-gray-900 dark:text-black">Select a
                major</label>
            <select id="majors"
                class="bg-gray-50 border border-gray-100 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-100 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-600 dark:focus:ring-blue-500 dark:focus:border-blue-500"
                required>
                <option value="" disabled selected>Choose Major</option>
                <option value="IT">IT</option>
                <option value="Business">Business</option>
                <option value="Art">Art</option>
            </select>
        </div>

        <div class="phonenumber">
            <label for="phonenumber" class="block mb-2 text-sm font-medium text-gray-900 dark:text-black">Phone
                Number</label>
            <input type="number" id="phoneNumber"
                class="block p-2.5 w-full text-sm text-gray-900 bg-gray-100 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-100 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-600 dark:focus:ring-blue-500 dark:focus:border-blue-500"
                placeholder="e.g: 123-456-789" required>
        </div>
        <div class="fullName">

            <label for="message" class="block mb-2 text-sm font-medium text-gray-900 dark:text-black">Full Name</label>
            <input id="fullName" rows="4"
                class="block p-2.5 w-full text-sm text-gray-900 bg-gray-100 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-100 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-600 dark:focus:ring-blue-500 dark:focus:border-blue-500"
                placeholder="Write your Full Name" required></input>

        </div>

        <div class="image flex flex-col">
            <label for="file-input" class="block mb-2 text-sm font-medium text-gray-900 dark:text-black">Image
                Upload</label>
            <input type="text"
                class="block p-2.5 w-full text-sm text-gray-900 bg-gray-100 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-100 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-600 dark:focus:ring-blue-500 dark:focus:border-blue-500"
                placeholder="Paste here" id="file_input">
        </div>



        <button id="submit"
            class="relative cursor-pointer inline-flex items-center justify-center p-0.5 mt-3 mb-2 me-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-cyan-500 to-blue-500 group-hover:from-cyan-500 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-cyan-200 dark:focus:ring-cyan-800">
            <span
                class="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-blue-900 rounded-md group-hover:bg-transparent group-hover:dark:bg-transparent  ">
                Submit
            </span></button>

        <div id="fillOut" class="hidden bg-red-100 mt-3 border border-red-400 text-red-700 px-4 py-3 rounded relative"
            role="alert">
            <strong class="font-bold">Alert: </strong>
            <span class="block sm:inline">Please fill out the form!</span>
            <span class="absolute top-0 bottom-0 right-0 px-4 py-3">
                <svg class="fill-current h-6 w-6 text-red-500" role="button" xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20">
                    <title>Close</title>
                    <path
                        d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z" />
                </svg>
            </span>
        </div>
    </form>
</body>
<script>
    const params = new Proxy(new URLSearchParams(window.location.search), {
        get: (searchParams, prop) => searchParams.get(prop),
    });
    const { id } = params;




    let sID = document.getElementById('SID');
    let major = document.getElementById('majors');
    let phone_number = document.getElementById('phoneNumber');
    let fullName = document.getElementById('fullName');
    let studentImg = document.getElementById('file_input');



    const fetchAPIstudent = () => {
        fetch(`http://localhost:3000/api/studentDetail/${id}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json; charset=UTF-8'
            }
        }).then((res) => res.json())
            .then((json) => {
                if (json.id) {
                    sID.value = json.sid,
                        major.value = json.major,
                        phone_number.value = json.phoneNumber,
                        fullName.value = json.fullname
                }
            })
    };
    fetchAPIstudent();


    const fillOut = document.getElementById('fillOut')
    const alertSID = document.getElementById('alertSID');
    const pattern = /^[sS]3[0-9]{3}$/;

    document.getElementById('submit').addEventListener('click', (e) => {
        e.preventDefault();

        if (!sID.value || !major.value || !phone_number.value || !fullName.value) {
            fillOut.classList.remove('hidden');

            setTimeout(() => {
                fillOut.classList.add('hidden');
            }, 5000);
            return;
        } if (!pattern.test(sID.value)) {
            alertSID.classList.remove('hidden');

            setTimeout(() => {
                alertSID.classList.add('hidden');
            }, 5000);
            return;
        }
        const body = JSON.stringify({
            sid: sID.value,
            major: major.value,
            phoneNumber: phone_number.value,
            fullname: fullName.value,
            image: studentImg.value
        });
        if (id) {
            fetch(`http://localhost:3000/edit/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json; Charset=UTF-8'
                },
                body,

            })
                .then((res) => res.json())
                .then((json) => {
                    if (json == 200) {
                        window.location.href = '/viewAll'
                    }
                })
        } else {
            fetch('http://localhost:3000/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json; charset=UTF-8'
                },
                body,
            }).then((res) => res.json())
                .then(({ code }) => {
                    if (code == 200) {
                        window.location.href = '/viewAll'
                    }
                })
        }

    })


</script>

</html>